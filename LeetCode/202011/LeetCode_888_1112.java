package November;

import org.junit.Test;

import java.util.HashSet;
/*

爱丽丝和鲍勃有不同大小的糖果棒：A[i] 是爱丽丝拥有的第 i 块糖的大小，B[j] 是鲍勃拥有的第 j 块糖的大小。
因为他们是朋友，所以他们想交换一个糖果棒，这样交换后，他们都有相同的糖果总量。（一个人拥有的糖果总量是他们拥有的糖果棒大小的总和。）
返回一个整数数组 ans，其中 ans[0] 是爱丽丝必须交换的糖果棒的大小，ans[1] 是 Bob 必须交换的糖果棒的大小。
如果有多个答案，你可以返回其中任何一个。保证答案存在。

示例 1：
输入：A = [1,1], B = [2,2]
输出：[1,2]

示例 2：
输入：A = [1,2], B = [2,3]
输出：[1,2]

示例 3：
输入：A = [2], B = [1,3]
输出：[2,3]

示例 4：
输入：A = [1,2,5], B = [2,4]
输出：[5,4]
 
提示：
    1 <= A.length <= 10000
    1 <= B.length <= 10000
    1 <= A[i] <= 100000
    1 <= B[i] <= 100000
    保证爱丽丝与鲍勃的糖果总量不同。
    答案肯定存在。

 */
public class LeetCode_888 {
    public int[] fairCandySwap(int[] A, int[] B) {
        HashSet<Integer> set = new HashSet<>();
        int sum1 = 0;
        int sum2 = 0;
        for (int i : A) {
            set.add(i);
            sum1 += i;
        }
        for (int i : B) {
            sum2 += i;
        }
        int dif = Math.abs(sum1 - sum2) / 2;

        if (sum1 > sum2) {
            for (int i : B) {

                if (set.contains(i + dif)) {
                    return new int[]{i + dif, i};
                }

            }
        } else {
            for (int i : B) {

                if (set.contains(i - dif)) {
                    return new int[]{i - dif, i};
                }

            }
        }

        return null;

    }

    @Test
    public void test() {
        int[] A1 = new int[]{29752, 61694, 31389, 27903, 40019, 29620, 2332, 55158, 47815, 56321, 32034, 6114, 62184, 85027, 44159, 9423, 41776,
                55910, 35900, 48007, 45518, 17208, 20695, 36851, 93460, 16551, 520, 15636, 1519, 85747, 66827, 6559, 40958, 70700, 76879, 45189, 21634,
                52448, 27593, 418, 50116, 38253, 27696, 46108, 28566, 7160, 80806, 21529, 90413, 74782, 31632, 43441, 66745, 84077, 75090, 64181, 42596,
                27171, 59876, 41765, 54053, 20934, 35967, 83634, 88774, 25333, 20847, 37063, 55936, 18982, 94611, 14965, 50760, 18386, 87040, 45568, 10035,
                50955, 17363, 40712, 48150, 1863, 81874, 48995, 96546, 95693, 29880, 55009, 80984, 35896, 5477, 72051, 57323, 68413, 8476, 80721, 76197, 66424,
                45681, 99470};
        int[] B1 = {84357, 15627, 29237, 77089, 14462, 57734, 62440, 33732, 15248, 41272, 9410, 89554, 48583, 79592, 40694, 19637, 11608, 21746, 10943,
                84380, 87026, 68842, 52672, 99058, 67115, 66067, 12220, 44793, 64439, 94176, 8744, 53189, 73624, 42368, 89431, 88522, 15814, 44063, 85099,
                18716, 27989, 27971, 12953, 27566, 15865, 73218, 56240, 7820, 26153, 83574, 21921, 62671, 32975, 23160, 20164, 85140, 90788, 18462, 69306,
                47146, 58847, 68083, 72545, 23179, 20473, 12686, 64462, 82964, 22000, 15951, 53932, 28628, 83447, 63737, 88541, 3273, 45679, 49543, 35365,
                26728, 40093, 27522, 40291, 10694, 53130, 67673, 22224, 52510, 15149, 34778, 16853, 47180, 8969, 36020, 25276, 74528, 64719, 9121, 85578, 44903};

        for (int i : fairCandySwap(A1, B1)) {
            System.out.println(i);
        }
    }
}
